"use strict";(()=>{function o(e){const n=[];var t=0;for(const o of e.entries()){t++;const s=o[1];if(s instanceof File){const r=s.name;const i=s.size;n.push(r+"="+i.toString())}}if(t===0){return Promise.reject(new Error("cannot send empty data"))}return fetch("/",{method:"POST",headers:{"X-Oneshot-Multipart-Content-Lengths":n.join(";")},body:e})}function t(e){console.log("sending string: ",e);if(e.length===0){return Promise.reject(new Error("cannot send empty data"))}return fetch("/",{method:"POST",headers:{"Content-Length":e.length.toString()},body:e})}function e(){console.log("running main");n();s()}function n(){const t=document.getElementById("file-form");if(!t){return}t.addEventListener("submit",e=>{e.preventDefault();e.stopPropagation();const n=new FormData(t);r(o(n))})}function s(){const n=document.getElementById("text-input");const e=document.getElementById("text-form");if(!n||!e){return}e.addEventListener("submit",e=>{e.preventDefault();e.stopPropagation();console.log("submitting string");r(t(n.value))});console.log("added string submit")}function r(e){e.then(e=>{if(e.ok){console.log("Transfer succeeded");document.body.innerHTML="Transfer succeeded"}else{const n="Transfer failed: "+e.status.toString+" "+e.statusText;console.log(n);document.body.innerHTML=n}}).catch(e=>{if(e instanceof Error){if(e.message==="cannot send empty data"){console.log(e.message);alert(e.message);return}}const n="Transfer failed: "+e;console.log(n);document.body.innerHTML=n})}e()})();